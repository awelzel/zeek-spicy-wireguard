import zeek_spicy_wireguard;
import Zeek_zeek_spicy_wireguard;

protocol analyzer spicy::Wireguard over UDP:
	parse with zeek_spicy_wireguard::WireGuardPacket;

protocol analyzer spicy::Tailscale over UDP:
	parse with zeek_spicy_wireguard::TailscalePacket;

on zeek_spicy_wireguard::HandshakeInitiation -> event Wireguard::handshake_initiation($conn, $is_orig, self.sender_index, self.unencrypted_ephemeral, self.encrypted_static, self.encrypted_timestamp, self.mac1, self.mac2);

on zeek_spicy_wireguard::HandshakeResponse   -> event Wireguard::handshake_response($conn, $is_orig, self.sender_index, self.receiver_index, self.unencrypted_ephemeral, self.encrypted_nothing, self.mac1, self.mac2);

on zeek_spicy_wireguard::PacketCookieReply   -> event Wireguard::packet_cookie_reply($conn, $is_orig, self.receiver_index, self.nonce, self.encrypted_cookie);

on zeek_spicy_wireguard::PacketData          -> event Wireguard::packet_data($conn, $is_orig, self.receiver_index, self.counter, cast<uint64>(|self.encrypted_encapsulated_packet|));

on zeek_spicy_wireguard::TSDiscoveryPacket     -> event Wireguard::tailscale_discovery_message($conn, $is_orig, self.senderDiscoPub);
